=============================================
依存関係をセンチネルで統一すべき

ブロックの検出が
  reorder と cps-block-analyzer で二重になっている。

  reorder のほうは assert にすべき
=============================================
すべての insn をチェックし発火可能なものを見つける。
ある重みづけをして優先する insn を決定
    連結するインストラクション深さが長い
    関連するレジスタが多い
    出現順
insn を発火する
リソースを埋める
時間経過によるリソース開放を反映
発火可能なものがあれば最初に戻る
すべておわっていないなら
    発火可能なものがでてくるまで順に
    時間経過によるリソース開放を反映
発火可能なものが出てきたので最初に戻る

リソースは何か？
    レジスタ(無限にあるけど)
    ACC
    memory
=============================================
(op (args) (result) ((....))
において result がないということは（偶然かもしれないが）
センチネルであるということ?
いまのところ result がないのは
* 二項比較子
 (:= (a0 a1) () ((....
* pop
 (:pop (3) () ((....
* app (そもそも結果がないし形式も違う)
 (:app func (f0 a0 a1))

別のセンチネルの判断基準では
次の cps が
  ない => センチネル
  1 => 続けられる
  2 以上 => センチネル。複数のあらたなブロックの始まり



